package algorithm.easy;import java.util.HashMap;import java.util.Map;import test.foundation.S;public class AreaOf3DShape {    public int projectionArea(int[][] grid) {        int sumx = 0;        int sumz = 0;        HashMap<Integer, Integer> map = new HashMap<>();        for (int i = 0; i < grid.length; i++) {            int[] g = grid[i];            sumx += g.length;            int max = 0;            for (int j = 0; j < g.length; j++) {                if (g[j] == 0) sumx--;                S.sop("J::::", j, ",", map.size());                if (map.containsKey(j))                    map.put(j, Math.max(map.get(j), g[j]));                else                    map.put(j, g[j]);                if (max < g[j])                    max = g[j];            }            sumz += max;        }        return sumx + sumz + sum(map);    }    private int sum(HashMap<Integer, Integer> map) {        int sum = 0;        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {            sum += entry.getValue();        }        return sum;    }}