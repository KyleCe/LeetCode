package algorithm.easy;public class BinaryTreeTilt {    /**     * Definition for a binary tree node.     * public class TreeNode {     * int val;     * TreeNode left;     * TreeNode right;     * TreeNode(int x) { val = x; }     * }     */    public static class TreeNode {        int val;        TreeNode left;        TreeNode right;        TreeNode(int x) {            val = x;        }    }    public int findTilt(TreeNode root) {        if (root == null) return 0;        return cal(root);    }    private int cal(TreeNode node) {        if (node.left == null && node.right == null) return 0;        else if (node.left != null && node.right != null)            return cal(node.left) + cal(node.right) + Math.abs(node.left.val - node.right.val);        else if (node.left != null) return cal(node.left);        else return cal(node.right);    }}