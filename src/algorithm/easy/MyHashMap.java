package algorithm.easy;public class MyHashMap {    private int buckets = 1000;    private int itemPerBuckets = 1001;    private Integer[][] valueArr = new Integer[buckets][];    /**     * Initialize your data structure here.     * <p>     * All keys and values will be in the range of [0, 1,000,000].     * The number of operations will be in the range of [1, 10,000].     */    public MyHashMap() {    }    private int pos(int val) {        return val / buckets;    }    private int hash(int val) {        return val % buckets;    }    /**     * value will always be non-negative.     */    public void put(int key, int value) {        Integer[] bucket = valueArr[pos(key)];        if (bucket == null)            valueArr[pos(key)] = new Integer[itemPerBuckets];        valueArr[pos(key)][hash(key)] = value;    }    /**     * Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key     */    public int get(int key) {        Integer[] bucket = valueArr[pos(key)];        if (bucket != null) {            Integer val = valueArr[pos(key)][hash(key)];            if (val != null)                return val;        }        return -1;    }    /**     * Removes the mapping of the specified value key if this map contains a mapping for the key     */    public void remove(int key) {        Integer[] bucket = valueArr[pos(key)];        if (bucket != null) {            Integer val = valueArr[pos(key)][hash(key)];            if (val != null) {                valueArr[pos(key)][hash(key)] = null;            }        }    }}