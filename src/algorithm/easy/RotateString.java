package algorithm.easy;import java.util.Arrays;import java.util.HashMap;import java.util.HashSet;import java.util.Map;import java.util.Set;public class MostCommonWord {    public String mostCommonWord(String paragraph, String[] banned) {        String[] words = paragraph.toLowerCase().replaceAll(",", " ").replaceAll("\\n", " ").split(" ");        Map<String, Integer> map = new HashMap<>();        Set<String> ban = new HashSet<>(Arrays.asList(banned));        for (String w : words) {            if (ban.contains(w)) continue;            if (nonAlphabet(w)) w = w.substring(0, w.length() - 1);            map.put(w, map.getOrDefault(w, 0) + 1);        }        int max = 0;        String res = "";        for (Map.Entry<String, Integer> entry : map.entrySet()) {            if (entry.getValue() > max) {                max = entry.getValue();                res = entry.getKey();            }        }        return res;    }    private boolean nonAlphabet(String w) {        return w.charAt(w.length() - 1) > 'z' || w.charAt(w.length() - 1) < 'a';    }}