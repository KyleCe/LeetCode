package algorithm.foundation.sortimport algorithm.base.BaseTestImplclass ShellSort : BaseTestImpl() {    override fun sort(a: Array<Comparable<*>>) {        val N = a.size        var h = 1        while (h < N / 3) h = 3 * h + 1        while (h >= 1) {            for (i in h until N) {                var j = i                while (j >= h && less(a[j], a[j - h])) {                    print("before exch: ")                    sop(*a)                    exch(a, j, j - h)                    print("after exch : ")                    sop(*a)                    println()                    j -= h                }            }            h /= 3        }    }}