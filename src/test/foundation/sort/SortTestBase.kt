package test.foundation.sortimport algorithm.base.BaseTestimport org.junit.Assertimport org.junit.Assert.assertFalseimport org.junit.Assert.assertTrueimport org.junit.Testabstract class SortTestBase {    var a = toSortArray()    private fun toSortArray() = sample().toUpperCase().toCharArray().toTypedArray()    open fun sample() = "SortAlgorithmTest"    @Suppress("UNCHECKED_CAST")    @Test    fun testSort() {        val copy = arrayOfNulls<Char>(a.size)        System.arraycopy(a, 0, copy, 0, a.size)        val baseTest = sortCore()        sorted(baseTest, copy as Array<Comparable<*>>)        Assert.assertTrue(baseTest.sorted(copy))        Assert.assertFalse(baseTest.sorted(a as Array<Comparable<*>>))    }    abstract fun sortCore(): BaseTest    private fun sorted(baseTest: BaseTest, a: Array<Comparable<*>>) {        assertFalse(baseTest.sorted(a))        baseTest.sort(a)        assertTrue(baseTest.sorted(a))    }}